def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def loadShareServerPlaceholders() {
    URI shareServerUri;

    try {
        shareServerUri = new URI(new File(projectDir, '../../assets/share_server_uri.txt').getText('UTF-8'))
    } catch (FileNotFoundException ignored) {
        println('File share_server_uri.txt not found, sharing URIs will not work')
        return [shareServerScheme: '', shareServerHost: '', shareServerPathPrefix: '']
    }

    String host = shareServerUri.host;

    if (shareServerUri.port > 0) {
        host += ":${shareServerUri.port}"
    }

    final Map<String, Object> placeholders = new HashMap<>();

    placeholders.put('shareServerScheme', shareServerUri.scheme)
    placeholders.put('shareServerHost', host)
    placeholders.put('shareServerPathPrefix', shareServerUri.path)

    return placeholders;
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.bustany.flouze"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = loadShareServerPlaceholders()
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
